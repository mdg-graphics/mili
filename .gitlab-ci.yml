workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web"
      when: always
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /^(\[Draft\]|\(Draft\)|Draft:)/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - when: never

stages:
  - test

variables:
  GIT_SUBMODULE_STRATEGY: normal

.slurm-defaults:
  variables:
    NNODES: 1
    NPROCS: 16
    QUEUE: pdebug
    INTEG_WALL_TIME: 5

.slurm:
  variables:
    LLNL_SLURM_SCHEDULER_PARAMETERS: "-N $NNODES -n $NPROCS -p $QUEUE -t $INTEG_WALL_TIME"

.build-mili-xmilics:
  variables:
    BUILD_DIR: MILI-toss_3_x86_64_ib-RZGENIE
  script:
    - configure
    - cd $BUILD_DIR
    - gmake -j opt
    - gmake utilsopt
    - cd -

.run-tests:
  script:
    - cd test/
    - mdgtest/Test.py -e mililib_env -c ../MILI-toss_3_x86_64_ib-RZGENIE/lib_opt -I ../MILI-toss_3_x86_64_ib-RZGENIE/include -n1 -p1 -s all > test_mili.out
    - num_mili_failed=$( grep -c -e failed -e "did not run correctly" test_mili.out ) || true
    - mdgtest/Test.py -e xmilics_env -c ../MILI-toss_3_x86_64_ib-RZGENIE/bin_utils_opt/xmilics -n1 -p1 -s all > test_xmilics.out
    - num_xmilics_failed=$( grep -c -e failed -e "did not run correctly" test_xmilics.out ) || true
    - num_failed=$(( $num_mili_failed + $num_xmilics_failed ))
    - exit $num_failed

.toss3-intel:
  before_script:
    module load intel/2022.1

toss3_intel_slurm_mili:
  stage: test
  tags:
    - rzgenie
    - slurm
    - batch
  extends:
    - .toss3-intel
    - .slurm-defaults
    - .slurm
    - .build-mili-xmilics
  script:
    - !reference [ .build-mili-xmilics, script ]
    - !reference [ .run-tests, script ]